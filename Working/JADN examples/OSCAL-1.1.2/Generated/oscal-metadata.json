{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://csrc.nist.gov/ns/oscal/1.1.2/oscal-metadata",
  "type": "object",
  "additionalProperties": false,
  "properties": {},
  "definitions": {
    "Back-matter": {
      "title": "Back matter",
      "type": "object",
      "description": "A collection of resources that may be referenced from within the OSCAL document instance.",
      "additionalProperties": false,
      "maxProperties": 100,
      "properties": {
        "resources": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Back-matter.resources",
            "description": ""
          }
        }
      }
    },
    "Back-matter.resources": {
      "title": "Back matter.resources",
      "type": "object",
      "description": "A resource associated with content in the containing document instance. A resource may be directly included in the document using base64 encoding or may point to one or more equivalent internet resources.",
      "additionalProperties": false,
      "required": [
        "uuid"
      ],
      "maxProperties": 100,
      "properties": {
        "uuid": {
          "$ref": "#/imports/c/UUIDDatatype",
          "description": "A unique identifier for a resource."
        },
        "title": {
          "type": "string",
          "description": "An optional name given to the resource, which may be used by a tool for display and navigation.",
          "maxLength": 1000
        },
        "description": {
          "type": "string",
          "description": "An optional short summary of the resource used to indicate the purpose of the resource.",
          "maxLength": 1000
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "document-ids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Document-id",
            "description": ""
          }
        },
        "citation": {
          "$ref": "#/definitions/Back-matter.resources.citation",
          "description": "An optional citation consisting of end note text using structured markup."
        },
        "rlinks": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Back-matter.resources.rlinks",
            "description": ""
          }
        },
        "base64": {
          "$ref": "#/definitions/Back-matter.resources.base64",
          "description": "A resource encoded using the Base64 alphabet defined by RFC 2045."
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Property": {
      "title": "Property",
      "type": "object",
      "description": "An attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair.",
      "additionalProperties": false,
      "required": [
        "name",
        "value"
      ],
      "maxProperties": 100,
      "properties": {
        "name": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "A textual label, within a namespace, that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object."
        },
        "uuid": {
          "$ref": "#/imports/c/UUIDDatatype",
          "description": "A unique identifier for a property."
        },
        "ns": {
          "$ref": "#/imports/c/URIDatatype",
          "description": "A namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name."
        },
        "value": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "Indicates the value of the attribute, characteristic, or quality."
        },
        "class": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "A textual label that provides a sub-type or characterization of the property's name."
        },
        "group": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "An identifier for relating distinct sets of properties."
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Remarks": {
      "title": "Remarks",
      "type": "string",
      "description": "Additional commentary about the containing object.",
      "maxLength": 1000
    },
    "Document-id": {
      "title": "Document id",
      "type": "object",
      "description": "A document identifier qualified by an identifier scheme.",
      "additionalProperties": false,
      "required": [
        "identifier"
      ],
      "maxProperties": 100,
      "properties": {
        "scheme": {
          "$ref": "#/definitions/Document-id.scheme",
          "description": "Qualifies the kind of document identifier using a URI. If the scheme is not provided the value of the element will be interpreted as a string of characters."
        },
        "identifier": {
          "$ref": "#/imports/c/StringDatatype",
          "description": ""
        }
      }
    },
    "Document-id.scheme": {
      "title": "Document id.scheme",
      "anyOf": [
        {
          "$ref": "#/imports/c/URIDatatype"
        },
        {
          "$ref": "#/definitions/Document-id.scheme.2"
        }
      ]
    },
    "Document-id.scheme.2": {
      "title": "Document id.scheme.2",
      "type": "string",
      "enum": [
        "http://www.doi.org/"
      ]
    },
    "Back-matter.resources.citation": {
      "title": "Back matter.resources.citation",
      "type": "object",
      "description": "An optional citation consisting of end note text using structured markup.",
      "additionalProperties": false,
      "required": [
        "text"
      ],
      "maxProperties": 100,
      "properties": {
        "text": {
          "type": "string",
          "description": "A line of citation text.",
          "maxLength": 1000
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        }
      }
    },
    "Link": {
      "title": "Link",
      "type": "object",
      "description": "A reference to a local or remote resource, that has a specific relation to the containing object.",
      "additionalProperties": false,
      "required": [
        "href"
      ],
      "maxProperties": 100,
      "properties": {
        "href": {
          "$ref": "#/imports/c/URIReferenceDatatype",
          "description": "A resolvable URL reference to a resource."
        },
        "rel": {
          "$ref": "#/definitions/Link.rel",
          "description": "Describes the type of relationship provided by the link's hypertext reference. This can be an indicator of the link's purpose."
        },
        "media-type": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "A label that indicates the nature of a resource, as a data serialization or format."
        },
        "resource-fragment": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "In case where the href points to a back-matter/resource, this value will indicate the URI fragment to append to any rlink associated with the resource. This value MUST be URI encoded."
        },
        "text": {
          "type": "string",
          "description": "A textual label to associate with the link, which may be used for presentation in a tool.",
          "maxLength": 1000
        }
      }
    },
    "Link.rel": {
      "title": "Link.rel",
      "anyOf": [
        {
          "$ref": "#/imports/c/TokenDatatype"
        },
        {
          "$ref": "#/definitions/Link.rel.2"
        }
      ]
    },
    "Link.rel.2": {
      "title": "Link.rel.2",
      "type": "string",
      "enum": [
        "reference"
      ]
    },
    "Back-matter.resources.rlinks": {
      "title": "Back matter.resources.rlinks",
      "type": "object",
      "description": "A URL-based pointer to an external resource with an optional hash for verification and change detection.",
      "additionalProperties": false,
      "required": [
        "href"
      ],
      "maxProperties": 100,
      "properties": {
        "href": {
          "$ref": "#/imports/c/URIReferenceDatatype",
          "description": "A resolvable URL pointing to the referenced resource."
        },
        "media-type": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "A label that indicates the nature of a resource, as a data serialization or format."
        },
        "hashes": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Hash",
            "description": ""
          }
        }
      }
    },
    "Hash": {
      "title": "Hash",
      "type": "object",
      "description": "A representation of a cryptographic digest generated over a resource using a specified hash algorithm.",
      "additionalProperties": false,
      "required": [
        "algorithm",
        "value"
      ],
      "maxProperties": 100,
      "properties": {
        "algorithm": {
          "$ref": "#/definitions/Hash.algorithm",
          "description": "The digest method by which a hash is derived."
        },
        "value": {
          "$ref": "#/imports/c/StringDatatype",
          "description": ""
        }
      }
    },
    "Hash.algorithm": {
      "title": "Hash.algorithm",
      "anyOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        },
        {
          "$ref": "#/definitions/Hash.algorithm.2"
        }
      ]
    },
    "Hash.algorithm.2": {
      "title": "Hash.algorithm.2",
      "type": "string",
      "enum": [
        "SHA-224",
        "SHA-256",
        "SHA-384",
        "SHA-512",
        "SHA3-224",
        "SHA3-256",
        "SHA3-384",
        "SHA3-512"
      ]
    },
    "Back-matter.resources.base64": {
      "title": "Back matter.resources.base64",
      "type": "object",
      "description": "A resource encoded using the Base64 alphabet defined by RFC 2045.",
      "additionalProperties": false,
      "required": [
        "value"
      ],
      "maxProperties": 100,
      "properties": {
        "filename": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "Name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded."
        },
        "media-type": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "A label that indicates the nature of a resource, as a data serialization or format."
        },
        "value": {
          "$ref": "#/imports/c/Base64Datatype",
          "description": ""
        }
      }
    },
    "Metadata": {
      "title": "Metadata",
      "type": "object",
      "description": "Provides information about the containing document, and defines concepts that are shared across the document.",
      "additionalProperties": false,
      "required": [
        "title",
        "last-modified",
        "version",
        "oscal-version"
      ],
      "maxProperties": 100,
      "properties": {
        "title": {
          "type": "string",
          "description": "A name given to the document, which may be used by a tool for display and navigation.",
          "maxLength": 1000
        },
        "published": {
          "$ref": "#/definitions/Published",
          "description": ""
        },
        "last-modified": {
          "$ref": "#/definitions/Last-modified",
          "description": ""
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": ""
        },
        "oscal-version": {
          "$ref": "#/definitions/Oscal-version",
          "description": ""
        },
        "revisions": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metadata.revisions",
            "description": ""
          }
        },
        "document-ids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Document-id",
            "description": ""
          }
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "roles": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metadata.roles",
            "description": ""
          }
        },
        "locations": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metadata.locations",
            "description": ""
          }
        },
        "parties": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metadata.parties",
            "description": ""
          }
        },
        "responsible-parties": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Responsible-party",
            "description": ""
          }
        },
        "actions": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Action",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Published": {
      "title": "Published",
      "allOf": [
        {
          "$ref": "#/imports/c/DateTimeWithTimezoneDatatype"
        }
      ]
    },
    "Last-modified": {
      "title": "Last modified",
      "allOf": [
        {
          "$ref": "#/imports/c/DateTimeWithTimezoneDatatype"
        }
      ]
    },
    "Version": {
      "title": "Version",
      "allOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        }
      ]
    },
    "Oscal-version": {
      "title": "Oscal version",
      "allOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        }
      ]
    },
    "Metadata.revisions": {
      "title": "Metadata.revisions",
      "type": "object",
      "description": "An entry in a sequential list of revisions to the containing document, expected to be in reverse chronological order (i.e. latest first).",
      "additionalProperties": false,
      "required": [
        "version"
      ],
      "maxProperties": 100,
      "properties": {
        "title": {
          "type": "string",
          "description": "A name given to the document revision, which may be used by a tool for display and navigation.",
          "maxLength": 1000
        },
        "published": {
          "$ref": "#/definitions/Published",
          "description": ""
        },
        "last-modified": {
          "$ref": "#/definitions/Last-modified",
          "description": ""
        },
        "version": {
          "$ref": "#/definitions/Version",
          "description": ""
        },
        "oscal-version": {
          "$ref": "#/definitions/Oscal-version",
          "description": ""
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Metadata.roles": {
      "title": "Metadata.roles",
      "type": "object",
      "description": "Defines a function, which might be assigned to a party in a specific situation.",
      "additionalProperties": false,
      "required": [
        "id",
        "title"
      ],
      "maxProperties": 100,
      "properties": {
        "id": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "A unique identifier for the role."
        },
        "title": {
          "type": "string",
          "description": "A name given to the role, which may be used by a tool for display and navigation.",
          "maxLength": 1000
        },
        "short-name": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "A short common name, abbreviation, or acronym for the role."
        },
        "description": {
          "type": "string",
          "description": "A summary of the role's purpose and associated responsibilities.",
          "maxLength": 1000
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Metadata.locations": {
      "title": "Metadata.locations",
      "type": "object",
      "description": "A physical point of presence, which may be associated with people, organizations, or other concepts within the current or linked OSCAL document.",
      "additionalProperties": false,
      "required": [
        "uuid"
      ],
      "maxProperties": 100,
      "properties": {
        "uuid": {
          "$ref": "#/imports/c/UUIDDatatype",
          "description": "A unique ID for the location, for reference."
        },
        "title": {
          "type": "string",
          "description": "A name given to the location, which may be used by a tool for display and navigation.",
          "maxLength": 1000
        },
        "address": {
          "$ref": "#/definitions/Address",
          "description": ""
        },
        "email-addresses": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Email-address",
            "description": ""
          }
        },
        "telephone-numbers": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Telephone-number",
            "description": ""
          }
        },
        "urls": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/imports/c/URIDatatype",
            "description": ""
          }
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Address": {
      "title": "Address",
      "type": "object",
      "description": "A postal address for the location.",
      "additionalProperties": false,
      "maxProperties": 100,
      "properties": {
        "type": {
          "$ref": "#/definitions/Address.type",
          "description": "Indicates the type of address."
        },
        "addr-lines": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Addr-line",
            "description": ""
          }
        },
        "city": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "City, town or geographical region for the mailing address."
        },
        "state": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "State, province or analogous geographical region for a mailing address."
        },
        "postal-code": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "Postal or ZIP code for mailing address."
        },
        "country": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "The ISO 3166-1 alpha-2 country code for the mailing address."
        }
      }
    },
    "Address.type": {
      "title": "Address.type",
      "anyOf": [
        {
          "$ref": "#/imports/c/TokenDatatype"
        },
        {
          "$ref": "#/definitions/Address.type.2"
        }
      ]
    },
    "Address.type.2": {
      "title": "Address.type.2",
      "type": "string",
      "enum": [
        "home",
        "work"
      ]
    },
    "Addr-line": {
      "title": "Addr line",
      "allOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        }
      ]
    },
    "Email-address": {
      "title": "Email address",
      "allOf": [
        {
          "$ref": "#/imports/c/EmailAddressDatatype"
        }
      ]
    },
    "Telephone-number": {
      "title": "Telephone number",
      "type": "object",
      "description": "A telephone service number as defined by ITU-T E.164.",
      "additionalProperties": false,
      "required": [
        "number"
      ],
      "maxProperties": 100,
      "properties": {
        "type": {
          "$ref": "#/definitions/Telephone-number.type",
          "description": "Indicates the type of phone number."
        },
        "number": {
          "$ref": "#/imports/c/StringDatatype",
          "description": ""
        }
      }
    },
    "Telephone-number.type": {
      "title": "Telephone number.type",
      "anyOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        },
        {
          "$ref": "#/definitions/Telephone-number.type.2"
        }
      ]
    },
    "Telephone-number.type.2": {
      "title": "Telephone number.type.2",
      "type": "string",
      "enum": [
        "home",
        "office",
        "mobile"
      ]
    },
    "Metadata.parties": {
      "title": "Metadata.parties",
      "type": "object",
      "description": "An organization or person, which may be associated with roles or other concepts within the current or linked OSCAL document.",
      "additionalProperties": false,
      "required": [
        "uuid",
        "type"
      ],
      "maxProperties": 100,
      "properties": {
        "uuid": {
          "$ref": "#/imports/c/UUIDDatatype",
          "description": "A unique identifier for the party."
        },
        "type": {
          "$ref": "#/definitions/Metadata.parties.type",
          "description": "A category describing the kind of party the object describes."
        },
        "name": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "The full name of the party. This is typically the legal name associated with the party."
        },
        "short-name": {
          "$ref": "#/imports/c/StringDatatype",
          "description": "A short common name, abbreviation, or acronym for the party."
        },
        "external-ids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metadata.parties.external-ids",
            "description": ""
          }
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "email-addresses": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Email-address",
            "description": ""
          }
        },
        "telephone-numbers": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Telephone-number",
            "description": ""
          }
        },
        "addresses": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Address",
            "description": ""
          }
        },
        "location-uuids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Location-uuid",
            "description": ""
          }
        },
        "member-of-organizations": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/imports/c/UUIDDatatype",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Metadata.parties.type": {
      "title": "Metadata.parties.type",
      "allOf": [
        {
          "$ref": "#/imports/c/StringDatatype"
        },
        {
          "$ref": "#/definitions/Metadata.parties.type.2"
        }
      ]
    },
    "Metadata.parties.type.2": {
      "title": "Metadata.parties.type.2",
      "type": "string",
      "enum": [
        "person",
        "organization"
      ]
    },
    "Metadata.parties.external-ids": {
      "title": "Metadata.parties.external ids",
      "type": "object",
      "description": "An identifier for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID).",
      "additionalProperties": false,
      "required": [
        "scheme",
        "id"
      ],
      "maxProperties": 100,
      "properties": {
        "scheme": {
          "$ref": "#/definitions/Metadata.parties.external-ids.scheme",
          "description": "Indicates the type of external identifier."
        },
        "id": {
          "$ref": "#/imports/c/StringDatatype",
          "description": ""
        }
      }
    },
    "Metadata.parties.external-ids.scheme": {
      "title": "Metadata.parties.external ids.scheme",
      "anyOf": [
        {
          "$ref": "#/imports/c/URIDatatype"
        },
        {
          "$ref": "#/definitions/Metadata.parties.external-ids.scheme.2"
        }
      ]
    },
    "Metadata.parties.external-ids.scheme.2": {
      "title": "Metadata.parties.external ids.scheme.2",
      "type": "string",
      "enum": [
        "http://orcid.org/"
      ]
    },
    "Location-uuid": {
      "title": "Location uuid",
      "allOf": [
        {
          "$ref": "#/imports/c/UUIDDatatype"
        }
      ]
    },
    "Responsible-party": {
      "title": "Responsible party",
      "type": "object",
      "description": "A reference to a set of persons and/or organizations that have responsibility for performing the referenced role in the context of the containing object.",
      "additionalProperties": false,
      "required": [
        "role-id",
        "party-uuids"
      ],
      "maxProperties": 100,
      "properties": {
        "role-id": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "A reference to a role performed by a party."
        },
        "party-uuids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Party-uuid",
            "description": ""
          }
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Party-uuid": {
      "title": "Party uuid",
      "allOf": [
        {
          "$ref": "#/imports/c/UUIDDatatype"
        }
      ]
    },
    "Action": {
      "title": "Action",
      "type": "object",
      "description": "An action applied by a role within a given party to the content.",
      "additionalProperties": false,
      "required": [
        "uuid",
        "type",
        "system"
      ],
      "maxProperties": 100,
      "properties": {
        "uuid": {
          "$ref": "#/imports/c/UUIDDatatype",
          "description": "A unique identifier that can be used to reference this defined action elsewhere in an OSCAL document. A UUID should be consistently used for a given location across revisions of the document."
        },
        "date": {
          "$ref": "#/imports/c/DateTimeWithTimezoneDatatype",
          "description": "The date and time when the action occurred."
        },
        "type": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "The type of action documented by the assembly, such as an approval."
        },
        "system": {
          "$ref": "#/imports/c/URIDatatype",
          "description": "Specifies the action type system used."
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "responsible-parties": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Responsible-party",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Responsible-role": {
      "title": "Responsible role",
      "type": "object",
      "description": "A reference to a role with responsibility for performing a function relative to the containing object, optionally associated with a set of persons and/or organizations that perform that role.",
      "additionalProperties": false,
      "required": [
        "role-id"
      ],
      "maxProperties": 100,
      "properties": {
        "role-id": {
          "$ref": "#/imports/c/TokenDatatype",
          "description": "A human-oriented identifier reference to a role performed."
        },
        "props": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Property",
            "description": ""
          }
        },
        "links": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Link",
            "description": ""
          }
        },
        "party-uuids": {
          "type": "array",
          "description": "",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Party-uuid",
            "description": ""
          }
        },
        "remarks": {
          "$ref": "#/definitions/Remarks",
          "description": ""
        }
      }
    },
    "Role-id": {
      "title": "Role id",
      "allOf": [
        {
          "$ref": "#/imports/c/TokenDatatype"
        }
      ]
    }
  },
  "imports": {
    "c": {
      "UUIDDatatype": {},
      "TokenDatatype": {},
      "URIDatatype": {},
      "StringDatatype": {},
      "URIReferenceDatatype": {},
      "Base64Datatype": {},
      "DateTimeWithTimezoneDatatype": {},
      "EmailAddressDatatype": {}
    }
  }
}